Este diretório é destinado aos arquivos de cabeçalho do projeto.

Um arquivo de cabeçalho é um arquivo que contém declarações C e definições de macro
para ser compartilhado entre vários arquivos de origem do projeto. Você solicita o uso de um
arquivo de cabeçalho no arquivo de origem do projeto (C, C ++, etc) localizado na pasta `src`
incluindo-o, com a diretiva de pré-processamento C `#include '.

```src/main.c

#include "header.h"

int main (void)
{
 ...
}
```

A inclusão de um arquivo de cabeçalho produz os mesmos resultados que a cópia do arquivo de cabeçalho
em cada arquivo de origem que precisa. Essa cópia seria demorada
e propenso a erros. Com um arquivo de cabeçalho, as declarações relacionadas aparecem
em apenas um lugar. Se eles precisam ser alterados, eles podem ser alterados em um
e os programas que incluem o arquivo de cabeçalho usarão automaticamente o
nova versão na próxima recompilação. O arquivo de cabeçalho elimina o trabalho de
encontrar e alterar todas as cópias, bem como o risco de uma falha no
encontrar uma cópia resultará em inconsistências dentro de um programa.

Em C, a convenção usual é fornecer nomes de arquivos de cabeçalho que terminem com `.h '.
É mais portátil usar somente letras, dígitos, traços e sublinhados no
nomes de arquivo de cabeçalho e no máximo um ponto.

Leia mais sobre o uso de arquivos de cabeçalho na documentação oficial do GCC:

* Include Syntax
* Include Operation
* Once-Only Headers
* Computed Includes

https://gcc.gnu.org/onlinedocs/cpp/Header-Files.html

____________________________________________________

This directory is intended for project header files.

A header file is a file containing C declarations and macro definitions
to be shared between several project source files. You request the use of a
header file in your project source file (C, C++, etc) located in `src` folder
by including it, with the C preprocessing directive `#include'.

```src/main.c

#include "header.h"

int main (void)
{
 ...
}
```

Including a header file produces the same results as copying the header file
into each source file that needs it. Such copying would be time-consuming
and error-prone. With a header file, the related declarations appear
in only one place. If they need to be changed, they can be changed in one
place, and programs that include the header file will automatically use the
new version when next recompiled. The header file eliminates the labor of
finding and changing all the copies as well as the risk that a failure to
find one copy will result in inconsistencies within a program.

In C, the usual convention is to give header files names that end with `.h'.
It is most portable to use only letters, digits, dashes, and underscores in
header file names, and at most one dot.

Read more about using header files in official GCC documentation:

* Include Syntax
* Include Operation
* Once-Only Headers
* Computed Includes

https://gcc.gnu.org/onlinedocs/cpp/Header-Files.html
