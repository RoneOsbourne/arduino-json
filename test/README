
Este diretório é destinado a testes de unidade PIO e testes de projeto.

O Teste de Unidade é um método de teste de software pelo qual unidades individuais de
código fonte, conjuntos de um ou mais módulos do programa MCU, juntamente com
dados de controle, procedimentos de uso e procedimentos operacionais, são testados para
determinar se eles são adequados para uso. O teste de unidade encontra problemas cedo
no ciclo de desenvolvimento.

Mais informações sobre o teste de unidade PIO:
- https://docs.platformio.org/page/plus/unit-testing.html


------------Mocky.io------------ 

{
"led off" : 0,
"led on" : 1
}
------------Prompt-------------- 

>ping 192.168.0.10 - verificar se esta ok 
>Entrar no diretório do projeto (cd...)
>npm install -g http-server
>http-server . -p 80 (starta o http-server 192.168.0.1:80)

------------Github--------------

CMD: 
 -  entrar no Path do projeto
 - git init (cria pasta oculta de controle arquivos, branchs, histórico, etc)
 - git status (status dos arquivos do projeto - em vermelho, sem monitoramento)
 - git add . (inicia monitoramento dos arquivos - fica verde)
 - git status (verifica se arquivos foram adicionados com sucesso)
 - git commit -m "Descrição do Commit" (cria commit das alterações)
 - git status (verifica se todos foram commitados e estão sem nenhuma alteração)
 - git remote add origin "endereço do repositório SSH do github" (especifica alterações para o diretório)
 - git remote -v (verifica links do repositorio remoto. Fetch: busca atualizações. Push: envia)
 - git push -u origin master (Envia as alterações)
 - Se der erro (Ex: referencias de arquivos do git com local), colocar ""--force"
 - git remote rm origin (retira vinculo do projeto com o repositorio, para informar novo repo para enviar)

 -> Caso seja feito Download ou clonagem do projeto_web, adicionar diretório "node_modules" para rodar.
 Este diretório não é uppado no push e github não permite add diretório com mais de 100 arquivos.